#pragma checksum "C:\Users\Cold\Desktop\DOTNET\WebSystemUsers\WebSystemUsers\WebSystemUsers\WebSystemUsers\Views\Forms\BasicFroms.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "1c57fe251c74249aa7d6d75ee95910d6d5968391"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Forms_BasicFroms), @"mvc.1.0.view", @"/Views/Forms/BasicFroms.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/Forms/BasicFroms.cshtml", typeof(AspNetCore.Views_Forms_BasicFroms))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "C:\Users\Cold\Desktop\DOTNET\WebSystemUsers\WebSystemUsers\WebSystemUsers\WebSystemUsers\Views\_ViewImports.cshtml"
using WebSystemUsers;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"1c57fe251c74249aa7d6d75ee95910d6d5968391", @"/Views/Forms/BasicFroms.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"5393f6f55c67a61abdd2148a1ac419ed2d3f6caa", @"/Views/_ViewImports.cshtml")]
    public class Views_Forms_BasicFroms : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("role", new global::Microsoft.AspNetCore.Html.HtmlString("form"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("form-inline"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("method", "get", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("rel", new global::Microsoft.AspNetCore.Html.HtmlString("stylesheet"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_4 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/lib/iCheck/custom.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_5 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/lib/iCheck/icheck.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_6 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("names", "Development,Staging,Productio", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.EnvironmentTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_EnvironmentTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            BeginContext(0, 2, true);
            WriteLiteral("\r\n");
            EndContext();
#line 2 "C:\Users\Cold\Desktop\DOTNET\WebSystemUsers\WebSystemUsers\WebSystemUsers\WebSystemUsers\Views\Forms\BasicFroms.cshtml"
  
    ViewData["Title"] = "BasicFroms";

#line default
#line hidden
            BeginContext(48, 1533, true);
            WriteLiteral(@"
<div class=""wrapper wrapper-content animated fadeInRight"">
    <div class=""row"">
        <div class=""col-lg-7"">
            <div class=""ibox "">
                <div class=""ibox-title"">
                    <h5>Basic form <small>Simple login form example</small></h5>
                    <div class=""ibox-tools"">
                        <a class=""collapse-link"">
                            <i class=""fa fa-chevron-up""></i>
                        </a>
                        <a class=""dropdown-toggle"" data-toggle=""dropdown"" href=""#"">
                            <i class=""fa fa-wrench""></i>
                        </a>
                        <ul class=""dropdown-menu dropdown-user"">
                            <li>
                                <a href=""#"" class=""dropdown-item"">Config option 1</a>
                            </li>
                            <li>
                                <a href=""#"" class=""dropdown-item"">Config option 2</a>
                            </li>
          ");
            WriteLiteral(@"              </ul>
                        <a class=""close-link"">
                            <i class=""fa fa-times""></i>
                        </a>
                    </div>
                </div>
                <div class=""ibox-content"">
                    <div class=""row"">
                        <div class=""col-sm-6 b-r"">
                            <h3 class=""m-t-none m-b"">Sign in</h3>
                            <p>Sign in today for more expirience.</p>
                            ");
            EndContext();
            BeginContext(1581, 692, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "1c57fe251c74249aa7d6d75ee95910d6d59683918092", async() => {
                BeginContext(1599, 667, true);
                WriteLiteral(@"
                                <div class=""form-group""><label>Email</label> <input type=""email"" placeholder=""Enter email"" class=""form-control""></div>
                                <div class=""form-group""><label>Password</label> <input type=""password"" placeholder=""Password"" class=""form-control""></div>
                                <div>
                                    <button class=""btn btn-sm btn-primary float-right m-t-n-xs"" type=""submit""><strong>Log in</strong></button>
                                    <label> <input type=""checkbox"" class=""i-checks""> Remember me </label>
                                </div>
                            ");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(2273, 284, true);
            WriteLiteral(@"
                        </div>
                        <div class=""col-sm-6"">
                            <h4>Not a member?</h4>
                            <p>You can create an account:</p>
                            <p class=""text-center"">
                                <a");
            EndContext();
            BeginWriteAttribute("href", " href=\"", 2557, "\"", 2564, 0);
            EndWriteAttribute();
            BeginContext(2565, 1374, true);
            WriteLiteral(@"><i class=""fa fa-sign-in big-icon""></i></a>
                            </p>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class=""col-lg-5"">
            <div class=""ibox "">
                <div class=""ibox-title"">
                    <h5>Horizontal form</h5>
                    <div class=""ibox-tools"">
                        <a class=""collapse-link"">
                            <i class=""fa fa-chevron-up""></i>
                        </a>
                        <a class=""dropdown-toggle"" data-toggle=""dropdown"" href=""#"">
                            <i class=""fa fa-wrench""></i>
                        </a>
                        <ul class=""dropdown-menu dropdown-user"">
                            <li>
                                <a href=""#"" class=""dropdown-item"">Config option 1</a>
                            </li>
                            <li>
                                <a href=""#"" class=""dro");
            WriteLiteral(@"pdown-item"">Config option 2</a>
                            </li>
                        </ul>
                        <a class=""close-link"">
                            <i class=""fa fa-times""></i>
                        </a>
                    </div>
                </div>
                <div class=""ibox-content"">
                    ");
            EndContext();
            BeginContext(3939, 1752, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "1c57fe251c74249aa7d6d75ee95910d6d596839112259", async() => {
                BeginContext(3945, 1739, true);
                WriteLiteral(@"
                        <p>Sign in today for more expirience.</p>
                        <div class=""form-group row"">
                            <label class=""col-lg-2 col-form-label"">Email</label>

                            <div class=""col-lg-10"">
                                <input type=""email"" placeholder=""Email"" class=""form-control""> <span class=""form-text m-b-none"">Example block-level help text here.</span>
                            </div>
                        </div>
                        <div class=""form-group row"">
                            <label class=""col-lg-2 col-form-label"">Password</label>

                            <div class=""col-lg-10""><input type=""password"" placeholder=""Password"" class=""form-control""></div>
                        </div>
                        <div class=""form-group row"">
                            <div class=""col-lg-offset-2 col-lg-10"">
                                <div class=""i-checks""><label> <div class=""icheckbox_square-green"" style");
                WriteLiteral(@"=""position: relative;""><input type=""checkbox"" style=""position: absolute; opacity: 0;""><ins class=""iCheck-helper"" style=""position: absolute; top: 0%; left: 0%; display: block; width: 100%; height: 100%; margin: 0px; padding: 0px; background: rgb(255, 255, 255); border: 0px; opacity: 0;""></ins></div><i></i> Remember me </label></div>
                            </div>
                        </div>
                        <div class=""form-group row"">
                            <div class=""col-lg-offset-2 col-lg-10"">
                                <button class=""btn btn-sm btn-white"" type=""submit"">Sign in</button>
                            </div>
                        </div>
                    ");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(5691, 1268, true);
            WriteLiteral(@"
                </div>
            </div>
        </div>
    </div>
    <div class=""row"">
        <div class=""col-lg-8"">
            <div class=""ibox "">
                <div class=""ibox-title"">
                    <h5>Inline form</h5>
                    <div class=""ibox-tools"">
                        <a class=""collapse-link"">
                            <i class=""fa fa-chevron-up""></i>
                        </a>
                        <a class=""dropdown-toggle"" data-toggle=""dropdown"" href=""#"">
                            <i class=""fa fa-wrench""></i>
                        </a>
                        <ul class=""dropdown-menu dropdown-user"">
                            <li>
                                <a href=""#"" class=""dropdown-item"">Config option 1</a>
                            </li>
                            <li>
                                <a href=""#"" class=""dropdown-item"">Config option 2</a>
                            </li>
                        </ul>
       ");
            WriteLiteral("                 <a class=\"close-link\">\r\n                            <i class=\"fa fa-times\"></i>\r\n                        </a>\r\n                    </div>\r\n                </div>\r\n                <div class=\"ibox-content\">\r\n                    ");
            EndContext();
            BeginContext(6959, 899, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "1c57fe251c74249aa7d6d75ee95910d6d596839116885", async() => {
                BeginContext(6997, 854, true);
                WriteLiteral(@"
                        <div class=""form-group"">
                            <label for=""exampleInputEmail2"" class=""sr-only"">Email address</label>
                            <input type=""email"" placeholder=""Enter email"" id=""exampleInputEmail2"" class=""form-control"">
                        </div>
                        <div class=""form-group"">
                            <label for=""exampleInputPassword2"" class=""sr-only"">Password</label>
                            <input type=""password"" placeholder=""Password"" id=""exampleInputPassword2"" class=""form-control"">
                        </div>
                        <div class=""checkbox m-l m-r-xs""><label class=""i-checks""> <input type=""checkbox""><i></i> Remember me </label></div>
                        <button class=""btn btn-white"" type=""submit"">Sign in</button>
                    ");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(7858, 2041, true);
            WriteLiteral(@"
                </div>
            </div>
        </div>
        <div class=""col-lg-4"">
            <div class=""ibox "">
                <div class=""ibox-title"">
                    <h5>Modal form <small>Example of login in modal box</small></h5>
                    <div class=""ibox-tools"">
                        <a class=""collapse-link"">
                            <i class=""fa fa-chevron-up""></i>
                        </a>
                        <a class=""dropdown-toggle"" data-toggle=""dropdown"" href=""#"">
                            <i class=""fa fa-wrench""></i>
                        </a>
                        <ul class=""dropdown-menu dropdown-user"">
                            <li>
                                <a href=""#"" class=""dropdown-item"">Config option 1</a>
                            </li>
                            <li>
                                <a href=""#"" class=""dropdown-item"">Config option 2</a>
                            </li>
                        </ul>");
            WriteLiteral(@"
                        <a class=""close-link"">
                            <i class=""fa fa-times""></i>
                        </a>
                    </div>
                </div>
                <div class=""ibox-content"">
                    <div class=""text-center"">
                        <a data-toggle=""modal"" class=""btn btn-primary"" href=""#modal-form"">Form in simple modal box</a>
                    </div>
                    <div id=""modal-form"" class=""modal fade"" aria-hidden=""true"">
                        <div class=""modal-dialog"">
                            <div class=""modal-content"">
                                <div class=""modal-body"">
                                    <div class=""row"">
                                        <div class=""col-sm-6 b-r"">
                                            <h3 class=""m-t-none m-b"">Sign in</h3>

                                            <p>Sign in today for more expirience.</p>

                                            ");
            EndContext();
            BeginContext(9899, 804, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "1c57fe251c74249aa7d6d75ee95910d6d596839121527", async() => {
                BeginContext(9917, 779, true);
                WriteLiteral(@"
                                                <div class=""form-group""><label>Email</label> <input type=""email"" placeholder=""Enter email"" class=""form-control""></div>
                                                <div class=""form-group""><label>Password</label> <input type=""password"" placeholder=""Password"" class=""form-control""></div>
                                                <div>
                                                    <button class=""btn btn-sm btn-primary float-right m-t-n-xs"" type=""submit""><strong>Log in</strong></button>
                                                    <label> <input type=""checkbox"" class=""i-checks""> Remember me </label>
                                                </div>
                                            ");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(10703, 380, true);
            WriteLiteral(@"
                                        </div>
                                        <div class=""col-sm-6"">
                                            <h4>Not a member?</h4>
                                            <p>You can create an account:</p>
                                            <p class=""text-center"">
                                                <a");
            EndContext();
            BeginWriteAttribute("href", " href=\"", 11083, "\"", 11090, 0);
            EndWriteAttribute();
            BeginContext(11091, 1652, true);
            WriteLiteral(@"><i class=""fa fa-sign-in big-icon""></i></a>
                                            </p>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class=""row"">
        <div class=""col-lg-12"">
            <div class=""ibox "">
                <div class=""ibox-title"">
                    <h5>All form elements <small>With custom checbox and radion elements.</small></h5>
                    <div class=""ibox-tools"">
                        <a class=""collapse-link"">
                            <i class=""fa fa-chevron-up""></i>
                        </a>
                        <a class=""dropdown-toggle"" data-toggle=""dropdown"" href=""#"">
                            <i class=""fa fa-wrench""></i>
                        </a>
                        <ul clas");
            WriteLiteral(@"s=""dropdown-menu dropdown-user"">
                            <li>
                                <a href=""#"" class=""dropdown-item"">Config option 1</a>
                            </li>
                            <li>
                                <a href=""#"" class=""dropdown-item"">Config option 2</a>
                            </li>
                        </ul>
                        <a class=""close-link"">
                            <i class=""fa fa-times""></i>
                        </a>
                    </div>
                </div>
                <div class=""ibox-content"">
                    ");
            EndContext();
            BeginContext(12743, 23452, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "1c57fe251c74249aa7d6d75ee95910d6d596839126189", async() => {
                BeginContext(12762, 1772, true);
                WriteLiteral(@"
                        <div class=""form-group  row"">
                            <label class=""col-sm-2 col-form-label"">Normal</label>

                            <div class=""col-sm-10""><input type=""text"" class=""form-control""></div>
                        </div>
                        <div class=""hr-line-dashed""></div>
                        <div class=""form-group row"">
                            <label class=""col-sm-2 col-form-label"">Help text</label>
                            <div class=""col-sm-10"">
                                <input type=""text"" class=""form-control""> <span class=""form-text m-b-none"">A block of help text that breaks onto a new line and may extend beyond one line.</span>
                            </div>
                        </div>
                        <div class=""hr-line-dashed""></div>
                        <div class=""form-group row"">
                            <label class=""col-sm-2 col-form-label"">Password</label>

                            <div c");
                WriteLiteral(@"lass=""col-sm-10""><input type=""password"" class=""form-control"" name=""password""></div>
                        </div>
                        <div class=""hr-line-dashed""></div>
                        <div class=""form-group row"">
                            <label class=""col-sm-2 col-form-label"">Placeholder</label>

                            <div class=""col-sm-10""><input type=""text"" placeholder=""placeholder"" class=""form-control""></div>
                        </div>
                        <div class=""hr-line-dashed""></div>
                        <div class=""form-group row"">
                            <label class=""col-lg-2 col-form-label"">Disabled</label>

                            <div class=""col-lg-10""><input type=""text""");
                EndContext();
                BeginWriteAttribute("disabled", " disabled=\"", 14534, "\"", 14545, 0);
                EndWriteAttribute();
                BeginContext(14546, 947, true);
                WriteLiteral(@" placeholder=""Disabled input here..."" class=""form-control""></div>
                        </div>
                        <div class=""hr-line-dashed""></div>
                        <div class=""form-group row"">
                            <label class=""col-lg-2 col-form-label"">Static control</label>

                            <div class=""col-lg-10""><p class=""form-control-plaintext"">email@example.com</p></div>
                        </div>
                        <div class=""hr-line-dashed""></div>
                        <div class=""form-group row"">
                            <label class=""col-sm-2 col-form-label"">
                                Checkboxes and radios <br>
                                <small class=""text-navy"">Normal Bootstrap elements</small>
                            </label>

                            <div class=""col-sm-10"">
                                <div><label> <input type=""checkbox""");
                EndContext();
                BeginWriteAttribute("value", " value=\"", 15493, "\"", 15501, 0);
                EndWriteAttribute();
                BeginContext(15502, 223, true);
                WriteLiteral("> Option one is this and that—be sure to include why it\'s great </label></div>\r\n                                <div>\r\n                                    <label>\r\n                                        <input type=\"radio\"");
                EndContext();
                BeginWriteAttribute("checked", " checked=\"", 15725, "\"", 15735, 0);
                EndWriteAttribute();
                BeginContext(15736, 1960, true);
                WriteLiteral(@" value=""option1"" id=""optionsRadios1"" name=""optionsRadios""> Option one is this and that—be sure to
                                        include why it's great
                                    </label>
                                </div>
                                <div>
                                    <label>
                                        <input type=""radio"" value=""option2"" id=""optionsRadios2"" name=""optionsRadios""> Option two can be something else and selecting it will
                                        deselect option one
                                    </label>
                                </div>
                            </div>
                        </div>
                        <div class=""hr-line-dashed""></div>
                        <div class=""form-group row"">
                            <label class=""col-sm-2 col-form-label"">Inline checkboxes</label>

                            <div class=""col-sm-10"">
                                <label>");
                WriteLiteral(@" <input type=""checkbox"" value=""option1"" id=""inlineCheckbox1""> a </label> <label class=""checkbox-inline"">
                                    <input type=""checkbox"" value=""option2"" id=""inlineCheckbox2""> b
                                </label> <label>
                                    <input type=""checkbox"" value=""option3"" id=""inlineCheckbox3""> c
                                </label>
                            </div>
                        </div>
                        <div class=""hr-line-dashed""></div>
                        <div class=""form-group row"">
                            <label class=""col-sm-2 col-form-label"">Checkboxes &amp; radios <br><small class=""text-navy"">Custom elements</small></label>

                            <div class=""col-sm-10"">
                                <div class=""i-checks""><label> <div class=""icheckbox_square-green"" style=""position: relative;""><input type=""checkbox""");
                EndContext();
                BeginWriteAttribute("value", " value=\"", 17696, "\"", 17704, 0);
                EndWriteAttribute();
                BeginContext(17705, 446, true);
                WriteLiteral(@" style=""position: absolute; opacity: 0;""><ins class=""iCheck-helper"" style=""position: absolute; top: 0%; left: 0%; display: block; width: 100%; height: 100%; margin: 0px; padding: 0px; background: rgb(255, 255, 255); border: 0px; opacity: 0;""></ins></div> <i></i> Option one </label></div>
                                <div class=""i-checks""><label> <div class=""icheckbox_square-green checked"" style=""position: relative;""><input type=""checkbox""");
                EndContext();
                BeginWriteAttribute("value", " value=\"", 18151, "\"", 18159, 0);
                EndWriteAttribute();
                BeginWriteAttribute("checked", " checked=\"", 18160, "\"", 18170, 0);
                EndWriteAttribute();
                BeginContext(18171, 463, true);
                WriteLiteral(@" style=""position: absolute; opacity: 0;""><ins class=""iCheck-helper"" style=""position: absolute; top: 0%; left: 0%; display: block; width: 100%; height: 100%; margin: 0px; padding: 0px; background: rgb(255, 255, 255); border: 0px; opacity: 0;""></ins></div> <i></i> Option two checked </label></div>
                                <div class=""i-checks""><label> <div class=""icheckbox_square-green checked disabled"" style=""position: relative;""><input type=""checkbox""");
                EndContext();
                BeginWriteAttribute("value", " value=\"", 18634, "\"", 18642, 0);
                EndWriteAttribute();
                BeginWriteAttribute("disabled", " disabled=\"", 18643, "\"", 18654, 0);
                EndWriteAttribute();
                BeginWriteAttribute("checked", " checked=\"", 18655, "\"", 18665, 0);
                EndWriteAttribute();
                BeginContext(18666, 470, true);
                WriteLiteral(@" style=""position: absolute; opacity: 0;""><ins class=""iCheck-helper"" style=""position: absolute; top: 0%; left: 0%; display: block; width: 100%; height: 100%; margin: 0px; padding: 0px; background: rgb(255, 255, 255); border: 0px; opacity: 0;""></ins></div> <i></i> Option three checked and disabled </label></div>
                                <div class=""i-checks""><label> <div class=""icheckbox_square-green disabled"" style=""position: relative;""><input type=""checkbox""");
                EndContext();
                BeginWriteAttribute("value", " value=\"", 19136, "\"", 19144, 0);
                EndWriteAttribute();
                BeginWriteAttribute("disabled", " disabled=\"", 19145, "\"", 19156, 0);
                EndWriteAttribute();
                BeginContext(19157, 907, true);
                WriteLiteral(@" style=""position: absolute; opacity: 0;""><ins class=""iCheck-helper"" style=""position: absolute; top: 0%; left: 0%; display: block; width: 100%; height: 100%; margin: 0px; padding: 0px; background: rgb(255, 255, 255); border: 0px; opacity: 0;""></ins></div> <i></i> Option four disabled </label></div>
                                <div class=""i-checks""><label> <div class=""iradio_square-green"" style=""position: relative;""><input type=""radio"" value=""option1"" name=""a"" style=""position: absolute; opacity: 0;""><ins class=""iCheck-helper"" style=""position: absolute; top: 0%; left: 0%; display: block; width: 100%; height: 100%; margin: 0px; padding: 0px; background: rgb(255, 255, 255); border: 0px; opacity: 0;""></ins></div> <i></i> Option one </label></div>
                                <div class=""i-checks""><label> <div class=""iradio_square-green checked"" style=""position: relative;""><input type=""radio""");
                EndContext();
                BeginWriteAttribute("checked", " checked=\"", 20064, "\"", 20074, 0);
                EndWriteAttribute();
                BeginContext(20075, 482, true);
                WriteLiteral(@" value=""option2"" name=""a"" style=""position: absolute; opacity: 0;""><ins class=""iCheck-helper"" style=""position: absolute; top: 0%; left: 0%; display: block; width: 100%; height: 100%; margin: 0px; padding: 0px; background: rgb(255, 255, 255); border: 0px; opacity: 0;""></ins></div> <i></i> Option two checked </label></div>
                                <div class=""i-checks""><label> <div class=""iradio_square-green checked disabled"" style=""position: relative;""><input type=""radio""");
                EndContext();
                BeginWriteAttribute("disabled", " disabled=\"", 20557, "\"", 20568, 0);
                EndWriteAttribute();
                BeginWriteAttribute("checked", " checked=\"", 20569, "\"", 20579, 0);
                EndWriteAttribute();
                BeginContext(20580, 480, true);
                WriteLiteral(@" value=""option2"" style=""position: absolute; opacity: 0;""><ins class=""iCheck-helper"" style=""position: absolute; top: 0%; left: 0%; display: block; width: 100%; height: 100%; margin: 0px; padding: 0px; background: rgb(255, 255, 255); border: 0px; opacity: 0;""></ins></div> <i></i> Option three checked and disabled </label></div>
                                <div class=""i-checks""><label> <div class=""iradio_square-green disabled"" style=""position: relative;""><input type=""radio""");
                EndContext();
                BeginWriteAttribute("disabled", " disabled=\"", 21060, "\"", 21071, 0);
                EndWriteAttribute();
                BeginContext(21072, 2355, true);
                WriteLiteral(@" name=""a"" style=""position: absolute; opacity: 0;""><ins class=""iCheck-helper"" style=""position: absolute; top: 0%; left: 0%; display: block; width: 100%; height: 100%; margin: 0px; padding: 0px; background: rgb(255, 255, 255); border: 0px; opacity: 0;""></ins></div> <i></i> Option four disabled </label></div>
                            </div>
                        </div>
                        <div class=""hr-line-dashed""></div>
                        <div class=""form-group row"">
                            <label class=""col-sm-2 col-form-label"">Inline checkboxes</label>

                            <div class=""col-sm-10"">
                                <label class=""i-checks""> <div class=""icheckbox_square-green"" style=""position: relative;""><input type=""checkbox"" value=""option1"" style=""position: absolute; opacity: 0;""><ins class=""iCheck-helper"" style=""position: absolute; top: 0%; left: 0%; display: block; width: 100%; height: 100%; margin: 0px; padding: 0px; background: rgb(255, 255, 255); border: 0");
                WriteLiteral(@"px; opacity: 0;""></ins></div>a </label>
                                <label class=""i-checks""> <div class=""icheckbox_square-green"" style=""position: relative;""><input type=""checkbox"" value=""option2"" style=""position: absolute; opacity: 0;""><ins class=""iCheck-helper"" style=""position: absolute; top: 0%; left: 0%; display: block; width: 100%; height: 100%; margin: 0px; padding: 0px; background: rgb(255, 255, 255); border: 0px; opacity: 0;""></ins></div> b </label>
                                <label class=""i-checks""> <div class=""icheckbox_square-green"" style=""position: relative;""><input type=""checkbox"" value=""option3"" style=""position: absolute; opacity: 0;""><ins class=""iCheck-helper"" style=""position: absolute; top: 0%; left: 0%; display: block; width: 100%; height: 100%; margin: 0px; padding: 0px; background: rgb(255, 255, 255); border: 0px; opacity: 0;""></ins></div> c </label>
                            </div>
                        </div>
                        <div class=""hr-line-dashed""></div>
   ");
                WriteLiteral(@"                     <div class=""form-group row"">
                            <label class=""col-sm-2 col-form-label"">Select</label>

                            <div class=""col-sm-10"">
                                <select class=""form-control m-b"" name=""account"">
                                    ");
                EndContext();
                BeginContext(23427, 25, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "1c57fe251c74249aa7d6d75ee95910d6d596839140591", async() => {
                    BeginContext(23435, 8, true);
                    WriteLiteral("option 1");
                    EndContext();
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(23452, 38, true);
                WriteLiteral("\r\n                                    ");
                EndContext();
                BeginContext(23490, 25, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "1c57fe251c74249aa7d6d75ee95910d6d596839141889", async() => {
                    BeginContext(23498, 8, true);
                    WriteLiteral("option 2");
                    EndContext();
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(23515, 38, true);
                WriteLiteral("\r\n                                    ");
                EndContext();
                BeginContext(23553, 25, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "1c57fe251c74249aa7d6d75ee95910d6d596839143187", async() => {
                    BeginContext(23561, 8, true);
                    WriteLiteral("option 3");
                    EndContext();
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(23578, 38, true);
                WriteLiteral("\r\n                                    ");
                EndContext();
                BeginContext(23616, 25, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "1c57fe251c74249aa7d6d75ee95910d6d596839144485", async() => {
                    BeginContext(23624, 8, true);
                    WriteLiteral("option 4");
                    EndContext();
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(23641, 173, true);
                WriteLiteral("\r\n                                </select>\r\n\r\n                                <div class=\"col-lg-4 m-l-n\">\r\n                                    <select class=\"form-control\"");
                EndContext();
                BeginWriteAttribute("multiple", " multiple=\"", 23814, "\"", 23825, 0);
                EndWriteAttribute();
                BeginContext(23826, 43, true);
                WriteLiteral(">\r\n                                        ");
                EndContext();
                BeginContext(23869, 25, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "1c57fe251c74249aa7d6d75ee95910d6d596839146215", async() => {
                    BeginContext(23877, 8, true);
                    WriteLiteral("option 1");
                    EndContext();
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(23894, 42, true);
                WriteLiteral("\r\n                                        ");
                EndContext();
                BeginContext(23936, 25, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "1c57fe251c74249aa7d6d75ee95910d6d596839147517", async() => {
                    BeginContext(23944, 8, true);
                    WriteLiteral("option 2");
                    EndContext();
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(23961, 42, true);
                WriteLiteral("\r\n                                        ");
                EndContext();
                BeginContext(24003, 25, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "1c57fe251c74249aa7d6d75ee95910d6d596839148819", async() => {
                    BeginContext(24011, 8, true);
                    WriteLiteral("option 3");
                    EndContext();
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(24028, 42, true);
                WriteLiteral("\r\n                                        ");
                EndContext();
                BeginContext(24070, 25, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "1c57fe251c74249aa7d6d75ee95910d6d596839150121", async() => {
                    BeginContext(24078, 8, true);
                    WriteLiteral("option 4");
                    EndContext();
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(24095, 12093, true);
                WriteLiteral(@"
                                    </select>
                                </div>
                            </div>
                        </div>
                        <div class=""hr-line-dashed""></div>
                        <div class=""form-group row has-success"">
                            <label class=""col-sm-2 col-form-label"">Input with success</label>

                            <div class=""col-sm-10""><input type=""text"" class=""form-control""></div>
                        </div>
                        <div class=""hr-line-dashed""></div>
                        <div class=""form-group row has-warning"">
                            <label class=""col-sm-2 col-form-label"">Input with warning</label>

                            <div class=""col-sm-10""><input type=""text"" class=""form-control""></div>
                        </div>
                        <div class=""hr-line-dashed""></div>
                        <div class=""form-group  row has-error"">
                            <label");
                WriteLiteral(@" class=""col-sm-2 col-form-label"">Input with error</label>

                            <div class=""col-sm-10""><input type=""text"" class=""form-control""></div>
                        </div>
                        <div class=""hr-line-dashed""></div>
                        <div class=""form-group row"">
                            <label class=""col-sm-2 col-form-label"">Control sizing</label>

                            <div class=""col-sm-10"">
                                <input type=""text"" placeholder="".form-control-lg"" class=""form-control form-control-lg m-b"">
                                <input type=""text"" placeholder=""Default input"" class=""form-control m-b""> <input type=""text"" placeholder="".form-control-sm"" class=""form-control form-control-sm"">
                            </div>
                        </div>
                        <div class=""hr-line-dashed""></div>
                        <div class=""form-group row"">
                            <label class=""col-sm-2 col-form-label"">Colu");
                WriteLiteral(@"mn sizing</label>

                            <div class=""col-sm-10"">
                                <div class=""row"">
                                    <div class=""col-md-2""><input type=""text"" placeholder="".col-md-2"" class=""form-control""></div>
                                    <div class=""col-md-3""><input type=""text"" placeholder="".col-md-3"" class=""form-control""></div>
                                    <div class=""col-md-4""><input type=""text"" placeholder="".col-md-4"" class=""form-control""></div>
                                </div>
                            </div>
                        </div>
                        <div class=""hr-line-dashed""></div>
                        <div class=""form-group row"">
                            <label class=""col-sm-2 col-form-label"">Input groups</label>

                            <div class=""col-sm-10"">
                                <div class=""input-group m-b"">
                                    <div class=""input-group-prepend"">
         ");
                WriteLiteral(@"                               <span class=""input-group-addon"">&#9993;</span>
                                    </div>
                                    <input type=""text"" placeholder=""Username"" class=""form-control"">
                                </div>
                                <div class=""input-group m-b"">
                                    <input type=""text"" class=""form-control"">
                                    <div class=""input-group-append"">
                                        <span class=""input-group-addon"">.00</span>
                                    </div>
                                </div>
                                <div class=""input-group m-b"">
                                    <div class=""input-group-prepend"">
                                        <span class=""input-group-addon"">$</span>
                                    </div>
                                    <input type=""text"" class=""form-control"">
                                    <div cl");
                WriteLiteral(@"ass=""input-group-append"">
                                        <span class=""input-group-addon"">.00</span>
                                    </div>
                                </div>
                                <div class=""input-group m-b"">
                                    <div class=""input-group-prepend"">
                                        <span class=""input-group-addon"">
                                            <input type=""checkbox"">
                                        </span>
                                    </div>
                                    <input type=""text"" class=""form-control"">
                                </div>
                                <div class=""input-group m-b"">
                                    <div class=""input-group-prepend"">
                                        <span class=""input-group-addon"">
                                            <input type=""radio"">
                                        </span>
                  ");
                WriteLiteral(@"                  </div>
                                    <input type=""text"" class=""form-control"">
                                </div>
                            </div>
                        </div>
                        <div class=""hr-line-dashed""></div>
                        <div class=""form-group row"">
                            <label class=""col-sm-2 col-form-label"">Button addons</label>

                            <div class=""col-sm-10"">

                                <div class=""input-group m-b"">
                                    <span class=""input-group-prepend"">
                                        <button type=""button"" class=""btn btn-primary"">Go!</button>
                                    </span> <input type=""text"" class=""form-control"">
                                </div>
                                <div class=""input-group"">
                                    <input type=""text"" class=""form-control""> <span class=""input-group-append"">
                   ");
                WriteLiteral(@"                     <button type=""button"" class=""btn btn-primary"">
                                            Go!
                                        </button>
                                    </span>
                                </div>
                            </div>
                        </div>
                        <div class=""hr-line-dashed""></div>
                        <div class=""form-group row"">
                            <label class=""col-sm-2 col-form-label"">With dropdowns</label>

                            <div class=""col-sm-10"">
                                <div class=""input-group m-b"">
                                    <div class=""input-group-prepend"">
                                        <button data-toggle=""dropdown"" class=""btn btn-white dropdown-toggle"" type=""button"">Action </button>
                                        <ul class=""dropdown-menu"">
                                            <li><a class=""dropdown-item"" href=""#"">Action</a></li>
");
                WriteLiteral(@"                                            <li><a class=""dropdown-item"" href=""#"">Another action</a></li>
                                            <li><a class=""dropdown-item"" href=""#"">Something else here</a></li>
                                            <li class=""dropdown-dropdown-divider""></li>
                                            <li><a class=""dropdown-item"" href=""#"">Separated link</a></li>
                                        </ul>
                                    </div>
                                    <input type=""text"" class=""form-control"">
                                </div>
                                <div class=""input-group"">
                                    <input type=""text"" class=""form-control"">

                                    <div class=""input-group-append"">
                                        <button data-toggle=""dropdown"" class=""btn btn-white dropdown-toggle"" type=""button"">Action </button>
                                        <ul class=");
                WriteLiteral(@"""dropdown-menu float-right"">
                                            <li><a class=""dropdown-item"" href=""#"">Action</a></li>
                                            <li><a class=""dropdown-item"" href=""#"">Another action</a></li>
                                            <li><a class=""dropdown-item"" href=""#"">Something else here</a></li>
                                            <li class=""dropdown-dropdown-divider""></li>
                                            <li><a class=""dropdown-item"" href=""#"">Separated link</a></li>
                                        </ul>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class=""hr-line-dashed""></div>
                        <div class=""form-group row"">
                            <label class=""col-sm-2 col-form-label"">Segmented</label>

                            <div class=""col-sm-10"">
                          ");
                WriteLiteral(@"      <div class=""input-group m-b"">
                                    <div class=""input-group-prepend"">
                                        <button tabindex=""-1"" class=""btn btn-white"" type=""button"">Action</button>
                                        <button data-toggle=""dropdown"" class=""btn btn-white dropdown-toggle"" type=""button""></button>
                                        <ul class=""dropdown-menu"">
                                            <li><a class=""dropdown-item"" href=""#"">Action</a></li>
                                            <li><a class=""dropdown-item"" href=""#"">Another action</a></li>
                                            <li><a class=""dropdown-item"" href=""#"">Something else here</a></li>
                                            <li class=""dropdown-dropdown-divider""></li>
                                            <li><a class=""dropdown-item"" href=""#"">Separated link</a></li>
                                        </ul>
                                    </");
                WriteLiteral(@"div>
                                    <input type=""text"" class=""form-control"">
                                </div>
                                <div class=""input-group"">
                                    <input type=""text"" class=""form-control"">

                                    <div class=""input-group-append"">
                                        <button tabindex=""-1"" class=""btn btn-white"" type=""button"">Action</button>
                                        <button data-toggle=""dropdown"" class=""btn btn-white dropdown-toggle"" type=""button""></button>
                                        <ul class=""dropdown-menu float-right"">
                                            <li><a class=""dropdown-item"" href=""#"">Action</a></li>
                                            <li><a class=""dropdown-item"" href=""#"">Another action</a></li>
                                            <li><a class=""dropdown-item"" href=""#"">Something else here</a></li>
                                            ");
                WriteLiteral(@"<li class=""dropdown-dropdown-divider""></li>
                                            <li><a class=""dropdown-item"" href=""#"">Separated link</a></li>
                                        </ul>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class=""hr-line-dashed""></div>
                        <div class=""form-group row"">
                            <div class=""col-sm-4 col-sm-offset-2"">
                                <button class=""btn btn-white btn-sm"" type=""submit"">Cancel</button>
                                <button class=""btn btn-primary btn-sm"" type=""submit"">Save changes</button>
                            </div>
                        </div>
                    ");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper.Method = (string)__tagHelperAttribute_2.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_2);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(36195, 84, true);
            WriteLiteral("\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n");
            EndContext();
            DefineSection("Styles", async() => {
                BeginContext(36296, 6, true);
                WriteLiteral("\r\n    ");
                EndContext();
                BeginContext(36302, 56, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "1c57fe251c74249aa7d6d75ee95910d6d596839165786", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_3);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_4);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(36358, 2, true);
                WriteLiteral("\r\n");
                EndContext();
            }
            );
            BeginContext(36363, 2, true);
            WriteLiteral("\r\n");
            EndContext();
            DefineSection("Scripts", async() => {
                BeginContext(36383, 6, true);
                WriteLiteral("\r\n    ");
                EndContext();
                BeginContext(36389, 131, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("environment", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "1c57fe251c74249aa7d6d75ee95910d6d596839167428", async() => {
                    BeginContext(36440, 10, true);
                    WriteLiteral("\r\n        ");
                    EndContext();
                    BeginContext(36450, 50, false);
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "1c57fe251c74249aa7d6d75ee95910d6d596839167850", async() => {
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                    __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_5);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    EndContext();
                    BeginContext(36500, 6, true);
                    WriteLiteral("\r\n    ");
                    EndContext();
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_EnvironmentTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.EnvironmentTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_EnvironmentTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_EnvironmentTagHelper.Names = (string)__tagHelperAttribute_6.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_6);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(36520, 278, true);
                WriteLiteral(@"

    <script type=""text/javascript"">
        $(document).ready(function () {

            $('.i-checks').iCheck({
                checkboxClass: 'icheckbox_square-green',
                radioClass: 'iradio_square-green',
            });

        });
    </script>
");
                EndContext();
            }
            );
            BeginContext(36801, 4, true);
            WriteLiteral("\r\n\r\n");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
